
const int con_Int = 10, const int con_int1 = 11;
const char con_Char = 'x';
int a, int_array[10];
char b, char_array[10];



int fib(int x)
{
	if(x==1)
		return (1);
	else
	{
		if(x==0)
			return (0);
		else 
		{
			return (fib(x-1)+fib(x-2));
		}
	}
}


void out(int x, char c)
{
	if(x==1)
		printf(con_Int);
	else
		printf("%c", c);
}


void test_array
{
	int a[1000];
	int b[1000];
	int i;
	i = 0;
	
	do
	{
		a[i] = i;
		b[i] = i;
		i = i+1;
	}while(i<100)

	i=a[b[a[a[b[a[16]]]]]] * a[b[a[b[a[b[a[a[11]]]]]]]];
	printf(i);
}


int cal
{
	int result;
	int h1, h2, h3, h4, h5, i;
	int a[5];
	h1 = 0;
	h2 = 0;
	h3 = 0;
	h4 = 0;
	h5 = 0;
	i = 0;
	result = 0;
	a[0] = 0;
	a[1] = 1;
	a[2] = 2;
	a[3] = 3;
	a[4] = 4;

	h1 = h2*h3;
	h1 = a[4]/a[2];
	h2 = h1*h3+h1-(a[4]+a[2])+fib(2);
	return (h2);
}


void test_case(int c)
{
	switch (c)
	{
		1:
		{
			printf("in_case_1");
		}
		15:
		{
			printf("in_case_15");
		}
		default:
		{
			printf("in_case_default");
		}
	}
}


char ret_char(char x)
{
	int out;
	char p;
	p = x;
	return (p);
}

void main()
{
	const int c1 = 1;
	const char c_c = 'z';
	int re;
	int i, a[100];
	int j;
	char read_in,b[100];
	i = 0;
	a[1] = 2;

	printf("test_in_var");
	i=10;
	out(i, char_array[4*5-17]);
	i=1;
	out(i, 'w');
	out(a[1], 'x');
	out(2,'q');

	printf("test_get_array");
	test_array;

	printf("test_cal");
	i=cal;
	printf(i);

	printf("test_case");
	scanf(j);
	test_case(j);

	printf("test_in_out");
	scanf(re);
	printf(re);
	printf(fib(5));

	printf("test_char_function");
	c_c = ret_char(c_c);
	printf(c_c); 
}